# 파이썬 주석처리
# #%%를 통해 셀을 나누어 프로젝트 내부에서 각각의 코드를 진행 가능함
# 자바와 달리 ;와 같은 콜론을 필요로 하지 않음

#%%
# 숫자 자료형 Integer
print(5)
print(-10)
print(3.14)
print(1000)

# 연산 calculation
print(5+3)
print(2+8)
print(3*(3+1))
print(4/2)

#%%
# 문자열 자료형 String
print('this is string data')
print("this is string data")
print("this is long string data+++++++++++++++++++++++++++")
# tring data 내부에 연산자를 통해 여러번 반복 출력 진행도 가능함
print("this code is print this string data"*9)

#%%
# 참거짓 boolean
print(5 > 10)
print(5231 < 123)
# true or false
print(True)
print(False)
# true => false, false => true
print(not True)
print(not False)
print(not (5>10))

#%%
# 변수 variable
name = "연탄이"
animal = "강아지"
age = 10
hobby = "산책"
is_adult = age >= 6

# +를 통해 사용 시 int형을 출력을 원하면 무조건 str()를 통해 문자열로 변경시켜야 가능함
print("이름은 : " + name)
print("동물의 종은 : " + animal)
print("나이는 : " + str(age))
print("취마는 : " + hobby)
print("성인인가? : " + str(is_adult))

# ,로 연결 시 자료형 변경 없이 바로 사용가능 하지만 공백이 생긴다는 점이 특징
print("이름은 :" , name)
print("동물의 종은 :" , animal)
print("나이는 :" , str(age))
print("취마는 :" , hobby)
print("성인인가? :" , str(is_adult))

#%%
# 주석 Comment
# 주석 처리는 #이나 '''를 통해 진행함
'''
print("우리집 강아지의 이름은 연탄이에요") # 이름 소개
print("연탄이는 4살이며, 산책을 아주 좋아해요") # 나이, 취미 소개
print("연탄이는 어른일까요? True") # 어른인지 여부 확인
'''

#%% 연습문제
station = ["사당", "신도림", "인천공항"]
i = 2
print(station[i]+ "행 열차가 들어오고 있습니다.")

#%%
# 연산자 Operator (+ ,- ,* ,/ ,%)
print(1+1) #덧셈
print(3-2) #뺄셈
print(5*2) #곱셈
print(10/2) #나눗셈(몫)
print(10%2) #나눗셈(나머지)

# 부등호 inequality sign (>, >=, <, <=)
print(10 > 3) #~보다 크다
print(5 >= 5) #~보다 크거나 같다
print(3 < 4) #~보다 작다
print(3 <= 4) #~보다 작거나 같다

# 등호 equal sign (==, !=)
print(3==3)
print(1!=3)

# 논리 연산 logical operation (and, or, not)
print((3>0) and (3>0)) # and는 true + true = true
print((3>0) or (3>12)) # or는 true + false or false + true의 경우에 = true
print(not(1!=3)) # not은 무조건 반대를 출력함 true => false, false => true
'''
참고사항
a > b > c == (a>b) and (b>c)
만약 (a>b)에서 false가 나오면 뒤의 (b>c)는 진행X
'''

#%%
# 연산자 우선순위
print(2+3*4)
print((2+3)*4)

# 변수에 연산자를 추가할 경우
number = ((2*9)+3)
number = number + 2 #연산자로 +, -, /, % 모두 사용 가능
print(number)

#%%
#레파지토리 수정작업 test
#%%